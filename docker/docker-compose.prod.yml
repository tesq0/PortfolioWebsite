version: '3.5'

networks:
  traefik:
    external:
      name: ${PROXY_NETWORK_NAME}
  mailu:
    external:
      name: mailu_default
  base:
    driver: ${NETWORKS_DRIVER}
    name: ${NETWORK_NAME}

services:
  backend:
    image: mikus-blog_backend
    volumes:
      - ../src/plugins:/var/www/html/plugins
      - ../src/themes/mikus-blog:/var/www/html/themes/mikus-blog
      - ../config/.env:/var/www/html/.env
      - ${DATA_PATH_HOST}/storage:/var/www/html/storage
    networks:
      - base
      - traefik
      - mailu
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${PROXY_NETWORK_NAME}"

      - "traefik.http.routers.mikus-blog.entrypoints=http"
      - "traefik.http.routers.mikus-blog.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.mikus-blog.middlewares=https-redirect@file"

      - "traefik.http.routers.mikus-blog-secure.service=mikus-blog-secure"
      - "traefik.http.routers.mikus-blog-secure.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.mikus-blog-secure.tls=true"
      - "traefik.http.routers.mikus-blog-secure.tls.certresolver=http"
      - "traefik.http.routers.mikus-blog-secure.entrypoints=https"
      # - "traefik.http.routers.mikus-blog-secure.middlewares=www-redirect@file"
      - "traefik.http.services.mikus-blog-secure.loadbalancer.server.port=8080"

### PostgreSQL ###########################################
  db:
    build:
      context: ./postgres
    volumes:
      - ${DATA_PATH_HOST}/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "${BIND_ADDRESS}:${POSTGRES_PORT}:5432"
    networks:
      - base

### Redis ################################################
  redis:
    build:
      context: ./redis
    volumes:
      - ${DATA_PATH_HOST}/redis:/data
    networks:
      - base
      
